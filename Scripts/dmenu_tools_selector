#!/bin/sh
sized_term() {
  width=$1
  height=$2
  title=$3
  cmd=$4
  if [ "$TERM" = "kitty" ]; then
    echo "kitty -o remember_window_size -o initial_window_width $width -o initial_window_height $height --title '$title' '$cmd'"
  elif [ "$TERM" = "urxvt" ]; then
    echo "urxvt -g ${width}x${height} -title '$title' -e '$cmd'"
  fi
}

mapping=$(cat <<EOF
bmenu                            ===> $(sized_term 750 500 "bmenu (floatme)" "bmenu")
morc_menu                        ===> morc_menu
pulsemixer                       ===> $(sized_term 750 500 "pulsemixer (floatme)" "pulsemixer")
alsamixer                        ===> $(sized_term 750 500 "alsamixer (floatme)" "alsamixer")
start input playback             ===> pacmd load-module module-loopback
stop input playback              ===> pacmd unload-module module-loopback
screenshot full screen           ===> i3-scrot -d
screenshot active window         ===> i3-scrot -w
screenshot selection             ===> i3-scrot -s
start picom                      ===> picom -b
kill picom                       ===> pkill picom
kill unresponsive window (xkill) ===> xkill
autocliker                       ===> ~/Scripts/autoclicker
select layout                    ===> ~/Scripts/dmenu_layout
restart dunst                    ===> killall dunst; notify-send "Dunst Restarted"
setup wacom tablet               ===> ~/Scripts/wacom_setup
EOF
)
keys="$(echo "$mapping" | sed -e 's/===>.*$//g' -e 's/[ \t]*$//g')"
values="$(echo "$mapping" | sed -e 's/^.*===>//g' -e 's/^[ \t]*//g')"

result=$(echo "$keys" | dmenu -l 5 -i -p "Run util")
if [ "$result" ]; then
  matching_line_number=$(echo "$keys" | sed -n "/$result/ =")
  if [ "$(echo "$matching_line_number" | wc -l)" != 1 ]; then
    echo "More than one match found"
    exit 1
  fi
  eval "$(echo "$values" | sed -n "$matching_line_number p")"
fi
